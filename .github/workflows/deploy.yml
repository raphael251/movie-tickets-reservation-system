name: Deploy to ECS Fargate

on:
  push:
    branches:
      - main

jobs:
  deploy:
    if: false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/portfolio-apps/movie-tickets-reservation-system:latest

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition movie-tickets-reservation-system-task-def --query taskDefinition > task-definition.json

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: MovieTicketsContainer
          image: ${{ steps.login-ecr.outputs.registry }}/portfolio-apps/movie-tickets-reservation-system:latest

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: movie-tickets-reservation-system-task-def-service-eag9df90
          cluster: accurate-dolphin-5u0pn2
          wait-for-service-stability: true

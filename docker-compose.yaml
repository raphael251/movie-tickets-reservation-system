services:
  movies-tickets-reservation-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: movies-tickets-reservation-api
    restart: always
    environment:
      - NODE_ENV=production
      - SERVER_PORT=3000

      # JWT Configuration
      - JWT_SECRET=your_jwt_secret
      - JWT_EXPIRATION=300

      # Database Configuration
      - DB_USERNAME=admin
      - DB_PASSWORD=123456
      - DB_DATABASE=movies-tickets-reservation-db
      - DB_MIGRATIONS_PATH=./dist/src/migrations/*.js
      - DB_HOST=movies-tickets-reservation-db
      - DB_PORT=5432
    networks:
      - movies-tickets-reservation-network
    ports:
      - 3000:3000
  movies-tickets-reservation-db:
    image: postgres:11
    container_name: movies-tickets-reservation-db
    restart: always
    environment:
      - POSTGRES_DB=movies-tickets-reservation-db
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=123456
    networks:
      - movies-tickets-reservation-network
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data
  movies-tickets-reservation-mail-hog:
    image: mailhog/mailhog:v1.0.1
    container_name: movies-tickets-reservation-mail-hog
    restart: always
    networks:
      - movies-tickets-reservation-network
    ports:
      - 1025:1025
      - 8025:8025
volumes:
  db:
    driver: local
networks:
  movies-tickets-reservation-network:
    driver: bridge
